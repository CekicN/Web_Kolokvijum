// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

#nullable disable

namespace Septembar2022.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20221214174434_V1")]
    partial class V1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.Biljka", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("CvetID")
                        .HasColumnType("int");

                    b.Property<int?>("ListID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PodrucjeID")
                        .HasColumnType("int");

                    b.Property<int?>("StabloID")
                        .HasColumnType("int");

                    b.Property<int>("kolicina")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CvetID");

                    b.HasIndex("ListID");

                    b.HasIndex("PodrucjeID");

                    b.HasIndex("StabloID");

                    b.ToTable("Biljke");
                });

            modelBuilder.Entity("Models.Cvet", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Izgled")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Cvece");
                });

            modelBuilder.Entity("Models.List", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Izgled")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Listovi");
                });

            modelBuilder.Entity("Models.NoveBiljke", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("CvetID")
                        .HasColumnType("int");

                    b.Property<int?>("ListID")
                        .HasColumnType("int");

                    b.Property<int?>("PodrucjeID")
                        .HasColumnType("int");

                    b.Property<int?>("StabloID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CvetID");

                    b.HasIndex("ListID");

                    b.HasIndex("PodrucjeID");

                    b.HasIndex("StabloID");

                    b.ToTable("NoveBiljke");
                });

            modelBuilder.Entity("Models.Podrucje", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Naziv")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Podrucja");
                });

            modelBuilder.Entity("Models.Stablo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Izgled")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Stabla");
                });

            modelBuilder.Entity("Models.Biljka", b =>
                {
                    b.HasOne("Models.Cvet", "Cvet")
                        .WithMany("Biljke")
                        .HasForeignKey("CvetID");

                    b.HasOne("Models.List", "List")
                        .WithMany("Biljke")
                        .HasForeignKey("ListID");

                    b.HasOne("Models.Podrucje", "Podrucje")
                        .WithMany("Biljke")
                        .HasForeignKey("PodrucjeID");

                    b.HasOne("Models.Stablo", "Stablo")
                        .WithMany("Biljke")
                        .HasForeignKey("StabloID");

                    b.Navigation("Cvet");

                    b.Navigation("List");

                    b.Navigation("Podrucje");

                    b.Navigation("Stablo");
                });

            modelBuilder.Entity("Models.NoveBiljke", b =>
                {
                    b.HasOne("Models.Cvet", "Cvet")
                        .WithMany("NoveBiljke")
                        .HasForeignKey("CvetID");

                    b.HasOne("Models.List", "List")
                        .WithMany("NoveBiljke")
                        .HasForeignKey("ListID");

                    b.HasOne("Models.Podrucje", "Podrucje")
                        .WithMany("NoveBiljke")
                        .HasForeignKey("PodrucjeID");

                    b.HasOne("Models.Stablo", "Stablo")
                        .WithMany("NoveBiljke")
                        .HasForeignKey("StabloID");

                    b.Navigation("Cvet");

                    b.Navigation("List");

                    b.Navigation("Podrucje");

                    b.Navigation("Stablo");
                });

            modelBuilder.Entity("Models.Cvet", b =>
                {
                    b.Navigation("Biljke");

                    b.Navigation("NoveBiljke");
                });

            modelBuilder.Entity("Models.List", b =>
                {
                    b.Navigation("Biljke");

                    b.Navigation("NoveBiljke");
                });

            modelBuilder.Entity("Models.Podrucje", b =>
                {
                    b.Navigation("Biljke");

                    b.Navigation("NoveBiljke");
                });

            modelBuilder.Entity("Models.Stablo", b =>
                {
                    b.Navigation("Biljke");

                    b.Navigation("NoveBiljke");
                });
#pragma warning restore 612, 618
        }
    }
}
