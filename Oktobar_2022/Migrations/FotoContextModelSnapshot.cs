// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

#nullable disable

namespace Oktobar2022.Migrations
{
    [DbContext(typeof(FotoContext))]
    partial class FotoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.Dimenzija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Sirina")
                        .HasColumnType("int");

                    b.Property<int>("Visina")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Dimenzije");
                });

            modelBuilder.Entity("Models.Fotografija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("DimenzijaID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PapirID")
                        .HasColumnType("int");

                    b.Property<int?>("RamID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("DimenzijaID");

                    b.HasIndex("PapirID");

                    b.HasIndex("RamID");

                    b.ToTable("Fotografije");
                });

            modelBuilder.Entity("Models.Papir", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Papiri");
                });

            modelBuilder.Entity("Models.Ram", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("DimenzijaID")
                        .HasColumnType("int");

                    b.Property<string>("Materijal")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DimenzijaID");

                    b.ToTable("Ramovi");
                });

            modelBuilder.Entity("Models.Fotografija", b =>
                {
                    b.HasOne("Models.Dimenzija", "Dimenzija")
                        .WithMany("Fotografije")
                        .HasForeignKey("DimenzijaID");

                    b.HasOne("Models.Papir", "Papir")
                        .WithMany("foto")
                        .HasForeignKey("PapirID");

                    b.HasOne("Models.Ram", "Ram")
                        .WithMany("Fotografije")
                        .HasForeignKey("RamID");

                    b.Navigation("Dimenzija");

                    b.Navigation("Papir");

                    b.Navigation("Ram");
                });

            modelBuilder.Entity("Models.Ram", b =>
                {
                    b.HasOne("Models.Dimenzija", "Dimenzija")
                        .WithMany("Ramovi")
                        .HasForeignKey("DimenzijaID");

                    b.Navigation("Dimenzija");
                });

            modelBuilder.Entity("Models.Dimenzija", b =>
                {
                    b.Navigation("Fotografije");

                    b.Navigation("Ramovi");
                });

            modelBuilder.Entity("Models.Papir", b =>
                {
                    b.Navigation("foto");
                });

            modelBuilder.Entity("Models.Ram", b =>
                {
                    b.Navigation("Fotografije");
                });
#pragma warning restore 612, 618
        }
    }
}
